name: Deploy all services
on:
  push:
    branches:
      - main
env:
  PULUMI_ACCESS_TOKEN: ${{ secrets.PULUMI_ACCESS_TOKEN }}
jobs:
  deploy-s3-backend:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@master
      - uses: ./.github/commands/yarn_install
      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-1
      - uses: pulumi/action-install-pulumi-cli@v1.0.1
      - run: yarn workspace @app/s3-backend exec pulumi up --stack test --yes --refresh

  benchmark-up:
    runs-on: ubuntu-latest
    name: Pulumi up ${{ matrix.name }}
    strategy:
      fail-fast: false
      matrix:
        include:
          - name: s3
            workspace: '@app/s3-backend-test'
            use-fork: 'false'
          - name: s3-fork
            workspace: '@app/s3-backend-test-with-fork'
            use-fork: 'true'
          - name: pulumi
            workspace: '@app/pulumi-backend-test'
            use-fork: 'false'
    steps:
      - uses: actions/checkout@master
      - uses: ./.github/commands/yarn_install
      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-1
      
      - uses: pulumi/action-install-pulumi-cli@v1.0.1
        if: matrix.use-fork == 'false'
      - uses: actions/setup-go@v3
        with:
          go-version: '>=1.17.0'
        if: matrix.use-fork == 'true'
      - name: Install Pulumi fork from dmattia/pulumi
        if: matrix.use-fork == 'true'
        run: |
          git clone https://github.com/dmattia/pulumi
          cd pulumi
          git checkout dmattia/s3_concurrency
          make install

      - run: pulumi plugin install resource aws v5.9.2
      - run: pulumi login s3://pulumi-state-backend-benchmarks-state
        if: matrix.name == 's3' || matrix.name == 's3-fork'

      - run: |
          yarn workspace ${{ matrix.workspace }} exec pulumi stack init --stack ${{ matrix.name }} || echo "stack already exists"
          yarn workspace ${{ matrix.workspace }} exec pulumi up --stack ${{ matrix.name }} --yes --refresh
        env:
          PULUMI_CONFIG_PASSPHRASE: 'not_set'

  benchmark-destroy:
    runs-on: ubuntu-latest
    name: Pulumi destroy ${{ matrix.name }}
    # needs: benchmark-up
    strategy:
      fail-fast: false
      matrix:
        include:
          # - name: s3
          #   workspace: '@app/s3-backend-test'
          #   use-fork: 'false'
          - name: s3-fork
            workspace: '@app/s3-backend-test-with-fork'
            use-fork: 'false'
          # - name: pulumi
          #   workspace: '@app/pulumi-backend-test'
          #   use-fork: 'false'
    steps:
      - uses: actions/checkout@master
      - uses: ./.github/commands/yarn_install
      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-1

      - uses: pulumi/action-install-pulumi-cli@v1.0.1
        if: matrix.use-fork == 'false'
      - uses: actions/setup-go@v3
        with:
          go-version: '>=1.17.0'
        if: matrix.use-fork == 'true'
      - name: Install Pulumi fork from dmattia/pulumi
        if: matrix.use-fork == 'true'
        run: |
          git clone https://github.com/dmattia/pulumi
          cd pulumi
          git checkout dmattia/s3_concurrency
          make install

      - run: pulumi plugin install resource aws v5.9.2
      - run: pulumi login s3://pulumi-state-backend-benchmarks-state
        if: matrix.name == 's3'
      - run: yarn workspace ${{ matrix.workspace }} exec pulumi destroy --stack ${{ matrix.name }} --yes --refresh
        env:
          PULUMI_CONFIG_PASSPHRASE: 'not_set'